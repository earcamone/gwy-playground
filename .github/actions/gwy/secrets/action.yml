name: 'gitleaks Scan'
description: 'Checks current code snapshot for secrets with Gitleaks'

outputs:
  result:
    description: 'Secrets scan result (success or failed)'
    value: ${{ steps.check-gitleaks.outputs.result }}

runs:
  using: 'composite'
  steps:
    - name: Initialize Secrets Check Environment
      shell: bash
      run: |
        # Initialize Secrets Check Environment
        
        GWY_SUMMARY=$RUNNER_TEMP/secrets-summary.txt
        echo -e "## Secrets Scan\n\n" >> $GWY_SUMMARY

        # set artifact dump file path
        echo "GWY_ARTIFACT=$RUNNER_TEMP/secrets-report.md" >> $GITHUB_ENV

        # set annotations reusable title
        echo "GWY_TITLE=code secrets scan" >> $GITHUB_ENV        
        
        echo "GWY_SUMMARY=$GWY_SUMMARY" >> $GITHUB_ENV
        echo "GWY_SECRET_ISSUES=0" >> $GITHUB_ENV
        echo "GWY_BRANCH=$(git branch --show-current)" >> $GITHUB_ENV
        GWY_REPO_URL=$(git config --get remote.origin.url | sed 's|git@github.com:|https://github.com/|' | sed 's|\.git$||')
        echo "GWY_REPO_URL=$GWY_REPO_URL" >> $GITHUB_ENV
        sync

    - name: Install Gitleaks (Pinned to 8.21.1)
      shell: bash --noprofile --norc +e -o pipefail {0}
      run: |
        if ! command -v gitleaks &> /dev/null; then
          curl -sSfL https://github.com/gitleaks/gitleaks/releases/download/v8.21.1/gitleaks_8.21.1_linux_x64.tar.gz | tar -xz -C /usr/local/bin gitleaks
        fi
        gitleaks version

    - name: Check Gitleaks for Secrets
      id: check-gitleaks
      shell: bash --noprofile --norc +e -o pipefail {0}
      continue-on-error: true
      run: |
        # Check Secrets in Code
        
        # Run gitleaks, stripping detected secrets in output
        timeout $GWY_TIMEOUT_SECONDS gitleaks detect --source . --no-git --verbose | grep -vE '^(Finding|Secret):' | tee $GWY_ARTIFACT
        
        # Count unique File:Line:RuleID combos using Fingerprint
        GWY_SECRET_ISSUES=$(awk '
          /RuleID:/ {rule=$2}
          /File:/ {file=$2}
          /Line:/ {line=$2}
          /Fingerprint:/ {key=file":"line":"rule; if (!(key in seen)) seen[key]=1}
          END {for (k in seen) count++; print count ? count : 0}
        ' $GWY_ARTIFACT)
        echo "GWY_SECRET_ISSUES=$GWY_SECRET_ISSUES" >> $GITHUB_ENV
        
        # process found secrets count
        if [ -z "$GWY_SECRET_ISSUES" ]; then
          GWY_SECRET_ISSUES=0
        fi
        
        # Process results
        if [ $GWY_SECRET_ISSUES -ne 0 ]; then
          echo "result=failed" >> $GITHUB_OUTPUT
          echo "::error title=$GWY_TITLE: $GWY_SECRET_ISSUES SECRETS FOUND!::check summary or artifact report for more details"
          grep -E '^(RuleID|File|Line|Fingerprint):' $GWY_ARTIFACT | \
            awk '
              /RuleID:/ {rule=$2}
              /File:/ {file=$2}
              /Line:/ {line=$2}
              /Fingerprint:/ {key=file":"line":"rule; if (!(key in seen)) {seen[key]=1; print "  - [" rule " in " file ":" line "](" ENVIRON["GWY_REPO_URL"] "/blob/" ENVIRON["GWY_BRANCH"] "/" file "#L" line ")"}}
            ' >> $GWY_SUMMARY
        else
          echo "result=success" >> $GITHUB_OUTPUT
          echo "::notice title=$GWY_TITLE::no secrets found in codebase"
          echo "  - no hardcoded secrets detected" >> $GWY_SUMMARY
        fi
        
        cat $GWY_SUMMARY >> $GITHUB_STEP_SUMMARY
        
        # append to artifact secrets scan output
        
        echo -e "\n\n## Secrets Scan Output\n\n\`\`\`" >> $GWY_SUMMARY
        cat $GWY_ARTIFACT >> $GWY_SUMMARY
        echo -e "\`\`\`\n" >> $GWY_SUMMARY
        
        cat $GWY_SUMMARY_HEADING > $GWY_ARTIFACT
        cat $GWY_SUMMARY >> $GWY_ARTIFACT

    - name: Upload Secrets Report Artifact
      if: always()
      uses: actions/upload-artifact@v4
      continue-on-error: true
      with:
        name: secrets-report
        path: ${{ env.GWY_ARTIFACT }}

    - name: Step Clean-Up
      if: always()
      shell: bash
      run: |
        rm -f $GWY_ARTIFACT
        rm -f $GWY_SUMMARY
        
        unset GWY_TITLE
        unset GWY_SUMMARY
        unset GWY_ARTIFACT
        unset GWY_SECRET_ISSUES
        unset GWY_BRANCH
        unset GWY_REPO_URL